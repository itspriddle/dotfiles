#!/usr/bin/env bash
# Usage: transmission-api [options] <path> [curl options]

# Enable debug mode
if [[ "$DEBUG" ]]; then
  export PS4='+ [${BASH_SOURCE##*/}:$LINENO] '
  set -x
fi

set -euo pipefail

TRANSMISSION_RPC_URL="${TRANSMISSION_RPC_URL:-$(jq -r .url ~/.config/transmission-api.json)/transmission/rpc}"

api() {
  local response response_code session

  if [[ -n "${1-}" ]]; then
    session="$1"
    shift
    set -- --header "X-Transmission-Session-Id: $session" "$@"
  else
    shift
  fi

  response=$(curl --silent \
    --write-out '\n{"__response_code": %{response_code}, "__session": "%header{x-transmission-session-id}"}' \
    --header "Content-Type: application/json" \
    "$@" \
    "$TRANSMISSION_RPC_URL"
  )

  if grep -q '<h1>' <<< "$response"; then
    response="{\"output\": \"$(sed '$d' <<< "$response" | sed 's,",\\",g')\"} $(tail -1 <<< "$response")"
  fi

  response=$(jq -s add <<< "$response")

  response_code=$(jq -r .__response_code <<< "$response")

  session=$(jq -r .__session <<< "$response")

  case "$response_code" in
    409)
      echo "Try again with --session=" >&2
      echo "$session"
      return 1
      ;;
  esac

  jq . <<< "$response"
}

main() {
  local auto_session=

  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      -a|--auto-session)
        shift
        auto_session=1
        ;;
      --session=*)
        session="${1#*=}"
        shift
        ;;
      -h|--help)
        sed -ne '/^#/!q;s/^#$/# /;/^# /s/^# //p' < "$0" |
          awk -v f="${1//-/}" 'f == "h" && $1 == "Usage:" { print; exit }; f != "h"'
        return 1
        ;;
      *)
        break
        ;;
    esac
  done

  if ! command -v jq &> /dev/null; then
    echo "jq is required" >&2
    return 1
  fi

  api "${auto_session//1/$(api 2>/dev/null || true)}" "$@"
}

main "$@"
