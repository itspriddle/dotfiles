#!/usr/bin/env bash

# Enable debug mode
if [[ "$DEBUG" ]]; then
  export PS4='+ [${BASH_SOURCE##*/}:$LINENO] '
  set -x
fi


target="${1:-daily}"

pattern=

case "$target" in
  hourly)
    pattern="$(date '+%H'):00"
    report_date="$(date '+%-l %p')"
    ;;
  daily)
    pattern="$(date '+%m/%d/%y')"
    report_date="$(date '+%b %-e, %Y')"
    ;;
  monthly)
    pattern="$(date "+%b '%y")"
    report_date="$(date '+%b %Y')"
    ;;
  yearly)
    pattern="$(date '+%Y')"
    report_date="$pattern"
    ;;
  *)
    echo "Usage: ${0##*/} hourly|daily|monthly|yearly" >&2
    exit 1
    ;;
esac

output=$( opnsense-bandwidth "$target" |
  { if [[ "$target" == hourly ]]; then
      awk -v pattern="$(date '+%m/%d/%y')" '$0 ~ pattern { f=1 } f'
    else
      cat
    fi
  } |
  grep -- "$pattern" |
  sed "s/ '/'/" |
  jq -nR \
    --arg fetched_at "$(date '+%F %T')" \
    --arg type "$target" \
    --arg report_date "$report_date" \
    '
    (inputs | gsub("^\\s+|\\s+$";"") | split(" +"; "")) as $input

    | {
      fetched_at:  $fetched_at,
      rx:          $input[1:3] | join(" "),
      tx:          $input[4:6] | join(" "),
      total:       $input[7:9] | join(" "),
      rate:        $input[10:12] | join(" "),
      type:        $type,
      report_date: $report_date
    }'
)

if [[ "$output" ]]; then
  cat <<< "$output"
else
  echo '{}'
  exit 4
fi
