#compdef curl

# generated with
# https://raw.githubusercontent.com/curl/curl/master/scripts/zsh.pl

# curl zsh completion

local curcontext="$curcontext" state state_descr line
typeset -A opt_args

local rc=1

_arguments -C -S \
  {-y,--speed-time}'[Trigger '\''speed-limit'\'' abort after SECONDS (default: 30)]':'SECONDS' \
  --proxy-cert'[Client certificate file and password for proxy (SSL)]':'CERT[:PASSWD]' \
  --proxy-crlfile'[Get a CRL list in PEM format from the given file for proxy]':'FILE' \
  --proxy-ssl-allow-beast'[security flaw to improve interop for proxy (SSL)]':'Allow' \
  {-Y,--speed-limit}'[Stop transfers below RATE for '\''speed-time'\'' secs]':'RATE' \
  --proxy-insecure'[connections to SSL sites without certs for proxy (H)]':'Allow' \
  --proxy-negotiate'[Use HTTP Negotiate (SPNEGO) authentication on the proxy (H)]' \
  --location-trusted'[Like '\''--location'\'', and send auth to other hosts (H)]' \
  --proxy-cert-type'[Certificate file type (DER/PEM/ENG) for proxy (SSL)]':'TYPE' \
  --proxy-tlsauthtype'[TLS authentication type for proxy (default SRP)]':'STRING' \
  {-S,--show-error}'[Show error. With -s, make curl show errors when they occur]' \
  --proxy-cacert'[CA certificate to verify peer against for proxy (SSL)]':'FILE' \
  --proxy-key-type'[Private key file type for proxy (DER/PEM/ENG) (SSL)]':'TYPE' \
  --ftp-alternative-to-user'[String to replace "USER \[name\]" (F)]':'COMMAND' \
  --proxy-capath'[CA directory to verify peer against for proxy (SSL)]':'DIR' \
  --ftp-ssl-control'[Require SSL/TLS for FTP login, clear for transfer (F)]' \
  --hostpubmd5'[Hex-encoded MD5 string of the host public key. (SSH)]':'MD5' \
  --abstract-unix-socket'[Connect to an abstract Unix domain socket]':'PATH' \
  {-E,--cert}'[Client certificate file and password (SSL)]':'CERT[:PASSWD]' \
  --connect-to'[Connect to host (network level)]':'HOST1:PORT1:HOST2:PORT2' \
  {-p,--proxytunnel}'[Operate through a HTTP proxy tunnel (using CONNECT)]' \
  {-P,--ftp-port}'[Use PORT with given address instead of PASV (F)]':'ADR' \
  {-j,--junk-session-cookies}'[Ignore session cookies read from file (H)]' \
  {-:,--next}'[Allows the following URL to use a separate set of options]' \
  {-Q,--quote}'[Send command(s) to server before transfer (F/SFTP)]':'CMD' \
  --socks5-hostname'[SOCKS5 proxy, pass host name to proxy]':'HOST[:PORT]' \
  --engine'[Crypto engine (use "--engine list" for list) (SSL)]':'ENGINE' \
  --pinnedpubkey'[Public key to verify peer against (SSL)]':'FILE/HASHES' \
  --proto-default'[Use PROTOCOL for any URL missing a scheme]':'PROTOCOL' \
  {-R,--remote-time}'[Set the remote file'\''s time on the local output]' \
  --socks5-gssapi-service'[SOCKS5 proxy service name for GSS-API]':'NAME' \
  --expect100-timeout'[How long to wait for 100-continue (H)]':'SECONDS' \
  --proxy-pass'[Pass phrase for the private key for proxy (SSL)]':'PASS' \
  --resolve'[Force resolve of HOST:PORT to ADDRESS]':'HOST:PORT:ADDRESS' \
  {-c,--cookie-jar}'[Write cookies to FILE after operation (H)]':'FILE' \
  --dns-ipv4-addr'[IPv4 address to use for DNS requests, dot notation]' \
  --dns-ipv6-addr'[IPv6 address to use for DNS requests, dot notation]' \
  --libcurl'[Dump libcurl equivalent code of this command line]':'FILE' \
  --mail-auth'[Originator address of the original email (SMTP)]':'AUTH' \
  {-O,--remote-name}'[Write output to a file named as the remote file]' \
  --retry-connrefused'[Retry on connection refused (use with --retry)]' \
  --suppress-connect-headers'[Suppress proxy CONNECT response headers]' \
  --crlfile'[Get a CRL list in PEM format from the given file]':'FILE' \
  {-g,--globoff}'[Disable URL sequences and ranges using {} and \[\]]' \
  --login-options'[Server login options (IMAP, POP3, SMTP)]':'OPTIONS' \
  --post301'[Do not switch to GET after following a 301 redirect (H)]' \
  --post302'[Do not switch to GET after following a 302 redirect (H)]' \
  --post303'[Do not switch to GET after following a 303 redirect (H)]' \
  --retry'[Retry request NUM times if transient problems occur]':'NUM' \
  --compressed'[Request compressed response (using deflate or gzip)]' \
  {-k,--insecure}'[Allow connections to SSL sites without certs (H)]' \
  --keepalive-time'[Wait SECONDS between keepalive probes]':'SECONDS' \
  --preproxy'[Proxy before HTTP(S) proxy]':'[PROTOCOL://]HOST[:PORT]' \
  --cert-status'[Verify the status of the server certificate (SSL)]' \
  --connect-timeout'[Maximum time allowed for connection]':'SECONDS' \
  {-f,--fail}'[Fail silently (no output at all) on HTTP errors (H)]' \
  --ftp-method'[Control CWD usage (F)]':'[MULTICWD/NOCWD/SINGLECWD]' \
  --http2-prior-knowledge'[Use HTTP 2 without HTTP/1.1 Upgrade (H)]' \
  {-m,--max-time}'[Maximum time allowed for the transfer]':'SECONDS' \
  --oauth2-bearer'[OAuth 2 Bearer Token (IMAP, POP3, SMTP)]':'TOKEN' \
  {-#,--progress-bar}'[Display transfer progress as a progress bar]' \
  {-x,--proxy}'[Use proxy on given port]':'[PROTOCOL://]HOST[:PORT]' \
  {-A,--user-agent}'[Send User-Agent STRING to server (H)]':'STRING' \
  --local-port'[Force use of RANGE for local port numbers]':'RANGE' \
  --proto-redir'[Enable/disable PROTOCOLS on redirect]':'PROTOCOLS' \
  {-J,--remote-header-name}'[Use the header-provided filename (H)]' \
  --ssl-allow-beast'[Allow security flaw to improve interop (SSL)]' \
  {-b,--cookie}'[Read cookies from STRING/FILE (H)]':'STRING/FILE' \
  --ignore-content-length'[Ignore the HTTP Content-Length header]' \
  --stderr'[Where to redirect stderr (use "-" for stdout)]':'FILE' \
  --tftp-blksize'[Set TFTP BLKSIZE option (must be >512)]':'VALUE' \
  --tlsauthtype'[TLS authentication type (default: SRP)]':'STRING' \
  --cert-type'[Certificate file type (DER/PEM/ENG) (SSL)]':'TYPE' \
  {-D,--dump-header}'[Write the received headers to FILE]':'FILE' \
  --random-file'[File for reading random data from (SSL)]':'FILE' \
  --unix-socket'[Connect through this Unix domain socket]':'PATH' \
  {-w,--write-out}'[Use output FORMAT after completion]':'FORMAT' \
  {-a,--append}'[Append to target file when uploading (F/SFTP)]' \
  --cacert'[CA certificate to verify peer against (SSL)]':'FILE' \
  --form-string'[Specify HTTP multipart POST data (H)]':'STRING' \
  --ftp-create-dirs'[Create the remote dirs if not present (F)]' \
  {-i,--include}'[Include protocol headers in the output (H/F)]' \
  --key-type'[Private key file type (DER/PEM/ENG) (SSL)]':'TYPE' \
  {-U,--proxy-user}'[Proxy user and password]':'USER[:PASSWORD]' \
  --fail-early'[Fail on first transfer error, do not continue]' \
  {-F,--form}'[Specify HTTP multipart POST data (H)]':'CONTENT' \
  {-H,--header}'[Pass custom header LINE to server (H)]':'LINE' \
  --interface'[Use network INTERFACE (or address)]':'INTERFACE' \
  --max-filesize'[Maximum file size to download (H/F)]':'BYTES' \
  --max-redirs'[Maximum number of redirects allowed (H)]':'NUM' \
  --negotiate'[Use HTTP Negotiate (SPNEGO) authentication (H)]' \
  --proxy-anyauth'[Pick "any" proxy authentication method (H)]' \
  --proxy-header'[Pass custom header LINE to proxy (H)]':'LINE' \
  --socks4a'[SOCKS4a proxy on given host + port]':'HOST[:PORT]' \
  {-z,--time-cond}'[Transfer based on a time condition]':'TIME' \
  --proxy-digest'[Use Digest authentication on the proxy (H)]' \
  --proxy-ciphers'[SSL ciphers to use for proxy (SSL)]':'LIST' \
  --proxy1.0'[Use HTTP/1.0 proxy on given port]':'HOST[:PORT]' \
  {-r,--range}'[Retrieve only the bytes within RANGE]':'RANGE' \
  --trace-ascii'[Like --trace, but without hex output]':'FILE' \
  --capath'[CA directory to verify peer against (SSL)]':'DIR' \
  --create-dirs'[Create necessary local directory hierarchy]' \
  {-n,--netrc}'[Must read .netrc for user name and password]' \
  --retry-max-time'[Retry only within this period]':'SECONDS' \
  --sasl-ir'[Enable initial response in SASL authentication]' \
  --socks4'[SOCKS4 proxy on given host + port]':'HOST[:PORT]' \
  --socks5'[SOCKS5 proxy on given host + port]':'HOST[:PORT]' \
  --socks5-gssapi-nec'[Compatibility with NEC SOCKS5 server]' \
  {-q,--disable}'[Disable .curlrc (must be first parameter)]' \
  --data-raw'[HTTP POST data, '\''@'\'' allowed (H)]':'DATA' \
  --egd-file'[EGD socket path for random data (SSL)]':'FILE' \
  --netrc-optional'[Use either .netrc or URL; overrides -n]' \
  {-N,--no-buffer}'[Disable buffering of the output stream]' \
  --ntlm-wb'[Use HTTP NTLM authentication with winbind (H)]' \
  --pass'[Pass phrase for the private key (SSL/SSH)]':'PASS' \
  --proxy-basic'[Use Basic authentication on the proxy (H)]' \
  --proxy-key'[Private key file name for proxy (SSL)]':'KEY' \
  --remote-name-all'[Use the remote file name for all URLs]' \
  {-X,--request}'[Specify request command to use]':'COMMAND' \
  --ssl-no-revoke'[Disable cert revocation checks (WinSSL)]' \
  --data-urlencode'[HTTP POST data url encoded (H)]':'DATA' \
  --dns-servers'[DNS server addrs to use: 1.1.1.1;2.2.2.2]' \
  --no-keepalive'[Disable keepalive use on the connection]' \
  --tr-encoding'[Request compressed transfer encoding (H)]' \
  {-T,--upload-file}'[Transfer FILE to destination]':'FILE' \
  {-u,--user}'[Server user and password]':'USER[:PASSWORD]' \
  --krb'[Enable Kerberos with security LEVEL (F)]':'LEVEL' \
  --proxy-ntlm'[Use NTLM authentication on the proxy (H)]' \
  --proxy-service-name'[SPNEGO proxy service name]':'NAME' \
  --ftp-ssl-ccc-mode'[Set CCC mode (F)]':'ACTIVE/PASSIVE' \
  --mail-rcpt'[Mail to this/these addresses (SMTP)]':'TO' \
  {-o,--output}'[Write to FILE instead of stdout]':'FILE' \
  --retry-delay'[Wait SECONDS between retries]':'SECONDS' \
  {-s,--silent}'[Silent mode (don'\''t output anything)]' \
  --trace-time'[Add time stamps to trace/verbose output]' \
  {-C,--continue-at}'[Resumed transfer OFFSET]':'OFFSET' \
  --delegation'[GSS-API delegation permission]':'STRING' \
  --ftp-skip-pasv-ip'[Skip the IP address for PASV (F)]' \
  --no-sessionid'[Disable SSL session-ID reusing (SSL)]' \
  --path-as-is'[Do not squash .. sequences in URL path]' \
  --proxy-tlspassword'[TLS password for proxy]':'STRING' \
  --tftp-no-options'[Do not send TFTP options requests]' \
  --metalink'[Process given URLs as metalink XML file]' \
  --ssl-reqd'[Require SSL/TLS (FTP, IMAP, POP3, SMTP)]' \
  --xattr'[Store metadata in extended file attributes]' \
  --dns-interface'[Interface to use for DNS requests]' \
  --ftp-pret'[Send PRET before PASV (for drftpd) (F)]' \
  --limit-rate'[Limit transfer speed to RATE]':'RATE' \
  --mail-from'[Mail from this address (SMTP)]':'FROM' \
  {-v,--verbose}'[Make the operation more talkative]' \
  --ftp-ssl-ccc'[Send CCC after authenticating (F)]' \
  {-G,--get}'[Send the -d data with a HTTP GET (H)]' \
  --tls-max'[Use TLS up to VERSION (SSL)]':'VERSION' \
  --anyauth'[Pick "any" authentication method (H)]' \
  --data-binary'[HTTP POST binary data (H)]':'DATA' \
  --noproxy'[List of hosts which do not use proxy]' \
  --disable-eprt'[Inhibit using EPRT or LPRT (F)]' \
  --proxy-tlsuser'[TLS username for proxy]':'USER' \
  --raw'[Do HTTP "raw"; no transfer decoding (H)]' \
  --data-ascii'[HTTP POST ASCII data (H)]':'DATA' \
  --ftp-account'[Account data string (F)]':'DATA' \
  --ftp-pasv'[Use PASV/EPSV instead of PORT (F)]' \
  --no-alpn'[Disable the ALPN TLS extension (H)]' \
  --proto'[Enable/disable PROTOCOLS]':'PROTOCOLS' \
  --digest'[Use HTTP Digest Authentication (H)]' \
  --key'[Private key file name (SSL/SSH)]':'KEY' \
  {-t,--telnet-option}'[Set telnet option]':'OPT=VAL' \
  {-V,--version}'[Show version number and quit]' \
  {-K,--config}'[Read config from FILE]':'FILE' \
  --netrc-file'[Specify FILE for netrc]':'FILE' \
  --no-npn'[Disable the NPN TLS extension (H)]' \
  --trace'[Write a debug trace to FILE]':'FILE' \
  --basic'[Use HTTP Basic Authentication (H)]' \
  --ciphers'[SSL ciphers to use (SSL)]':'LIST' \
  --service-name'[SPNEGO service name]':'NAME' \
  --pubkey'[Public key file name (SSH)]':'KEY' \
  --ssl'[Try SSL/TLS (FTP, IMAP, POP3, SMTP)]' \
  {-4,--ipv4}'[Resolve name to IPv4 address]' \
  {-6,--ipv6}'[Resolve name to IPv6 address]' \
  {-l,--list-only}'[List only mode (F/POP3)]' \
  --tcp-nodelay'[Use the TCP_NODELAY option]' \
  {-B,--use-ascii}'[Use ASCII/text transfer]' \
  --ntlm'[Use HTTP NTLM authentication (H)]' \
  --proxy-tlsv1'[Use TLSv1 for proxy (SSL)]' \
  {-d,--data}'[HTTP POST data (H)]':'DATA' \
  --disable-epsv'[Inhibit using EPSV (F)]' \
  --false-start'[Enable TLS False Start.]' \
  {-M,--manual}'[Display the full manual]' \
  {-L,--location}'[Follow redirects (H)]' \
  --crlf'[Convert LF to CRLF in upload]' \
  {-I,--head}'[Show document info only]' \
  --tlspassword'[TLS password]':'STRING' \
  --tcp-fastopen'[Use TCP Fast Open]' \
  {-0,--http1.0}'[Use HTTP 1.0 (H)]' \
  {-e,--referer}'[Referer URL (H)]' \
  --tlsuser'[TLS username]':'USER' \
  {-2,--sslv2}'[Use SSLv2 (SSL)]' \
  {-3,--sslv3}'[Use SSLv3 (SSL)]' \
  --url'[URL to work with]':'URL' \
  --tlsv1.0'[Use TLSv1.0 (SSL)]' \
  --tlsv1.1'[Use TLSv1.1 (SSL)]' \
  --tlsv1.2'[Use TLSv1.2 (SSL)]' \
  --tlsv1.3'[Use TLSv1.3 (SSL)]' \
  {-h,--help}'[This help text]' \
  --http1.1'[Use HTTP 1.1 (H)]' \
  --http2'[Use HTTP 2 (H)]' \
  {-1,--tlsv1}'[Use >= TLSv1 (SSL)]' \
  '*:URL:_urls' && rc=0

return rc
