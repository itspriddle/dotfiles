# Use vcs_info to get git prompt
autoload -Uz vcs_info
autoload -Uz add-zsh-hook

zstyle ':vcs_info:*'      enable git
zstyle ':vcs_info:git*:*' get-revision true
zstyle ':vcs_info:git*:*' check-for-changes true
zstyle ':vcs_info:git*:*' unstagedstr "+" # %u
# zstyle ':vcs_info:git*:*' stagedstr "âš¡"  # %c
zstyle ':vcs_info:git*:*' stagedstr "*"  # %c
zstyle ':vcs_info:git*'   actionformats "%b %c%u|%a"
zstyle ':vcs_info:git*'   formats       "%b %c%u"

# Skip `hub` wrapper around git
zstyle ':vcs_info:git:*:-all-' command \git

_josh_prompt_precmd() {
  local git_prompt="" host_prompt="" dir_prompt git_info

  if [[ $TERM == xterm* ]]; then
    print -Pn "\\e]0;${SSH_CONNECTION:+%n@%M:}%~\\a"
  fi

  vcs_info 2> /dev/null

  if [[ -n $vcs_info_msg_0_ ]]; then
    # Strip space from " |"
    git_info="${vcs_info_msg_0_// |/|}"

    # Strip trailing space
    git_info="${git_info%\ }"

    git_prompt="%{$fg_bold[green]%} (${git_info})%{$reset_color%}"
  fi

  dir_prompt="%{$fg_bold[blue]%}%3~%{$reset_color%}"

  if [[ -n $SSH_CONNECTION ]]; then
    host_prompt="%{$fg_bold[yellow]%}%n@%M%{$reset_color%} "
  fi

  PS1="${host_prompt}${dir_prompt}${git_prompt} %# "
}

add-zsh-hook precmd _josh_prompt_precmd

# vim: ft=zsh
