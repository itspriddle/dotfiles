# Use vcs_info to get git prompt
autoload -Uz vcs_info
autoload -Uz add-zsh-hook

zstyle ':vcs_info:*'      enable git
zstyle ':vcs_info:git*:*' get-revision true
zstyle ':vcs_info:git*:*' check-for-changes true
zstyle ':vcs_info:git*:*' unstagedstr   "%F{magenta}•%f"  # %u below
zstyle ':vcs_info:git*:*' stagedstr     "%F{green}•%f"    # %c below
zstyle ':vcs_info:git*'   actionformats "%F{magenta}%a:%f%F{green}%b%f %u%c"
zstyle ':vcs_info:git*'   formats       "%F{green}%b%f %u%c"
# zstyle ':vcs_info:git*'   formats       "%F{cyan}%7<<%i%<< %f%F{green}%b%f %u%c"

_josh_prompt_vcs_info() {
  vcs_info 2> /dev/null

  if [[ -n "${vcs_info_msg_0_}" ]]; then
    echo " %F{green}(%f${vcs_info_msg_0_%% }%F{green})%f"
  fi
}

_josh_prompt_precmd() {
  local git_prompt user_format="${${USER:#priddle}:+%n@}" host_prompt="" host_format="%m" dir_prompt

  if [[ -n $SSH_CONNECTION ]]; then
    host_prompt="%F{yellow}${user_format}${host_format}%f:"
  fi

  if [[ $TERM == xterm* ]]; then
    print -Pn "\\e]0;${SSH_CONNECTION:+${user_format}${host_format}:}%~\\a"
  fi

  git_prompt="$(_josh_prompt_vcs_info)"

  dir_prompt="%F{blue}%3~%f"

  PS1="%B${host_prompt}${dir_prompt}${git_prompt}%b %(!.#.%%) "
}

add-zsh-hook precmd _josh_prompt_precmd

# vim: ft=zsh
