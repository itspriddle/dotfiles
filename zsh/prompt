# Use vcs_info to get git prompt
autoload -Uz vcs_info
autoload -Uz add-zsh-hook

zstyle ':vcs_info:*'     enable git
zstyle ':vcs_info:git:*' get-revision true
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' unstagedstr   "%F{magenta}•%f"  # %u below
zstyle ':vcs_info:git:*' stagedstr     "%F{green}•%f"    # %c below
zstyle ':vcs_info:git:*' actionformats "%F{yellow}%a:%f%F{cyan}%b%f %u%c"
zstyle ':vcs_info:git:*' formats                      "%F{cyan}%b%f %u%c"

_josh_prompt_vcs_info() {
  vcs_info 2> /dev/null

  if [[ -n "${vcs_info_msg_0_%% }" ]]; then
    echo " %F{cyan}(%f${vcs_info_msg_0_%% }%F{cyan})%f"
  fi
}

_josh_prompt_precmd() {
  local git_prompt
  local user_format="${${USER:#priddle}:+%n@}"
  local host_prompt=""
  local host_format="%m"
  local job_prompt="%(1j.%F{24}[%j]%f .)%f"
  local dir_prompt="%B%F{blue}%3~%f%b"
  # local dir_prompt="%B%F{blue}$(shrink-path -f)%f%b"

  if [[ -n $SSH_CONNECTION ]]; then
    host_prompt="%B%F{yellow}${user_format}${host_format}%f:%b"
  fi

  if [[ $TERM == xterm* ]]; then
    print -Pn "\\e]0;${SSH_CONNECTION:+${user_format}${host_format}:}%~\\a"
  fi

  git_prompt="$(_josh_prompt_vcs_info)"

  PROMPT="${job_prompt}${host_prompt}${dir_prompt}${git_prompt} %(!.#.%%) "
}

add-zsh-hook precmd _josh_prompt_precmd

# vim: ft=zsh
