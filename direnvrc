# Changes the current ruby version.
#
# Usage in .envrc:
#
#   use ruby [version]
#   PATH_add bin
use_ruby() {
  # load up chruby if needed and available
  if ! command -v chruby > /dev/null; then
    local src="${HOMEBREW_PREFIX-/opt/homebrew}/opt/chruby/share/chruby/chruby.sh"

    if [[ -f "$src" ]]; then
      # shellcheck source=/dev/null
      source "$src"
    else
      >&2 echo "chruby not available!"
      return 1
    fi
  fi

  # desired Ruby version as first parameter
  local ver="$1"

  # if version not given as parameter and there is a .ruby-version file, get
  # version from the file
  if [[ -z "$ver" ]] && [[ -f .ruby-version ]]; then
    ver=$(cat .ruby-version)
  fi

  # if the version still isn't set, error cause we don't know what to do
  if [[ -z "$ver" ]]; then
    >&2 echo "Unknown ruby version"
    return 1
  fi

  # switch to the desired ruby version
  chruby "$ver"
}

# Sets PATH for Homebrew core and shivammathur/php taps
#
# Usage in .envrc:
#
#   use homebrew_php
#   use homebrew_php 8.2
use_homebrew_php() {
  local version="$1"
  local optdir="${HOMEBREW_PREFIX-/opt/homebrew}/opt/php"

  if [[ "$version" ]]; then
    optdir="$optdir@$version"
  fi

  if [[ -d "$optdir" ]]; then
    PATH_add "$optdir/bin"
    PATH_add "$optdir/sbin"
    MANPATH_add "$optdir/share/man"
  else
    >&2 echo "Unknown PHP version"
    return 1
  fi
}

# Sets work specific git email.
#
# Usage in .envrc:
#
#   set_git_email foo@bar.com
set_git_email() {
  local email="$1"

  if [[ -z "$email" ]]; then
    >&2 echo "Couldn't set git email!"
    return 1
  fi

  export GIT_COMMITTER_EMAIL="$email"
  export GIT_AUTHOR_EMAIL="$email"
}
