#!/usr/bin/env bash

# "%": untracked files in repo
# export GIT_PS1_SHOWUNTRACKEDFILES=1

# "+": staged
# "*": unstaged
export GIT_PS1_SHOWDIRTYSTATE=1

# "$": something stashed
# export GIT_PS1_SHOWSTASHSTATE=1

source "${BASH_SOURCE%/*}/git-prompt.sh"

_josh_prompt_command() {
  local blue green yellow reset git host pat cwd tmp prompt_cwd

  blue='\[\e[1;34m\]'
  green='\[\e[1;32m\]'
  yellow='\[\e[1;33m\]'
  reset='\[\e[0m\]'

  git="$(__git_ps1 " ${green}(%s)${reset}" 2> /dev/null)"

  if [ "$SSH_CONNECTION" ]; then
    host="${yellow}\\u@\\h${reset}:"
  fi

  pat="$(printf '/*%.0s' {1..3})"
  cwd="${PWD/$HOME/\~}"
  tmp="${cwd%"$pat"}"

  if [ "${#tmp}" -gt 0 ] && [ "$tmp" != "$cwd" ]; then
    prompt_cwd="$(printf "%s" "${cwd:${#tmp}+1}")"
  else
    prompt_cwd="$(printf "%s" "$cwd")"
  fi

  PS1="${host}${blue}${prompt_cwd}${reset}${git} $ "

  case "$TERM" in
    xterm*|rxvt*)
      if [ "$SSH_CONNECTION" ]; then
        printf '\e]0;%s@%s:%s\a' "$USER" "$HOSTNAME" "$cwd"
      else
        printf '\e]0;%s\a' "$cwd"
      fi
      ;;
  esac
}

export PROMPT_COMMAND="_josh_prompt_command${PROMPT_COMMAND:+; $PROMPT_COMMAND}"
