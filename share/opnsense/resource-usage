#!/usr/bin/env bash

# Enable debug mode
if [[ "$DEBUG" ]]; then
  export PS4='+ [${BASH_SOURCE##*/}:$LINENO] '
  set -x
fi

API="$(dirname "$0")/api"

"$API" diagnostics/activity/getActivity | jq '
  def fmt: . | tostring | gsub("(?<n>\\d+\\.\\d).*"; .n) | tonumber;
  def plural(word): if . == 1 then "\(.) \(word)" else "\(.) \(word)s" end;

  .
  | (.headers[0] | gsub(".* up (?<up>[^ ]+).*"; .up) | split("+")) as $uptime
  | (.headers[2] | gsub(".* (?<cpu>[0-9.]+)% idle.*"; .cpu)) as $cpu_idle
  | (.headers[3] | gsub(".*Mem: (?<mem>.+) Active,.*"; .mem)) as $mem_active
  | (.headers[3] | gsub(".*Mem:.*, (?<mem>.+) Free.*"; .mem)) as $mem_free
  | {
      uptime: (
        if ($uptime[0] | tonumber) > 0 then
          $uptime[0] | tonumber | plural("day")
        elif ($uptime[1] | split(":")[0] | tonumber) > 0 then
          $uptime[1] | split(":") | first | tonumber | plural("hour")
        elif ($uptime[1] | split(":")[1] | tonumber) > 0 then
          $uptime[1] | split(":")[1] | tonumber | plural("min")
        else
          $uptime[1] | split(":")[2] | tonumber | plural("sec")
        end
      ),
      cpu_idle: ($cpu_idle | tonumber),
      cpu_usage: (100 - ($cpu_idle | tonumber) | fmt),
      memory_usage: $mem_active,
      memory_free: $mem_free
    }
  '
