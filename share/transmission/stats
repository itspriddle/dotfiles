#!/usr/bin/env php
<?php

function apiRequest($session_id = null) {
  $url = "https://transmission.priddle.network/transmission/rpc";

  $params = ["method" => "session-stats"];
  $headers = ['Content-Type: application/json'];
  $res_headers = [];

  if ($session_id) {
    $headers[] = "x-transmission-session-id: $session_id";
  }

  $ch = curl_init();
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
  curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($params));

  if (!$session_id) {
    curl_setopt($ch, CURLOPT_HEADER, 1);
    curl_setopt($ch, CURLOPT_HEADERFUNCTION, function($curl, $header) use (&$res_headers) {
      $len = strlen($header);
      $header = explode(':', $header, 2);
      if (count($header) < 2)
        return $len;

      $res_headers[strtolower(trim($header[0]))] = trim($header[1]);
      return $len;
    });
  }

  $res = curl_exec($ch);
  $status = curl_getinfo($ch, CURLINFO_HTTP_CODE);
  curl_close($ch);

  return ["result" => $res, "headers" => $res_headers, "status" => $status];
}

$req1 = apiRequest();

if ($req1["status"] != 409) {
  echo "Unexpected response\n";
  exit(1);
}

$session_id = $req1["headers"]["x-transmission-session-id"];

$req2 = apiRequest($session_id);

if ($req2["status"] != 200) {
  echo "Error\n";
  exit(1);
}

$info = json_decode($req2["result"], true);

if ($info["result"] != "success") {
  echo "Error\n";
  exit(1);
}

// Not needed, but saving in case I change my mind
function bytesToHuman($bytes, $dec = 2) {
  return $bytes;

  $size   = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
  $factor = floor((strlen($bytes) - 1) / 3);
  if ($factor == 0) $dec = 0;

  return sprintf("%.{$dec}f %s", $bytes / (1024 ** $factor), $size[$factor]);
}

$output = [
  "total_torrents" => $info["arguments"]["torrentCount"],
  "leeching_torrents" => $info["arguments"]["torrentCount"] - $info["arguments"]["activeTorrentCount"],
  "active_torrents" => $info["arguments"]["activeTorrentCount"],
  "download_speed" => bytesToHuman($info["arguments"]["downloadSpeed"]),
  "upload_speed" => bytesToHuman($info["arguments"]["uploadSpeed"]),
];

echo json_encode($output, JSON_PRETTY_PRINT);
