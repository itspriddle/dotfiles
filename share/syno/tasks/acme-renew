#!/usr/bin/env bash

set -euo pipefail

SYNO_NGINX_RELOAD=1

ACME_ROOT="/usr/local/share/acme.sh"

export HC_CONFIG=/var/services/homes/priddle/.config/healthchecks-io.json

_log() {
  local ts

  ts=$(TZ=UTC date '+%a %b %e %H:%M:%S %Z %Y')

  printf -- "%s ====> %s\n" "[$ts] acme-renew:" "$1" >&2
}

install_cert() {
  local domain="$1"
  local cert="${domain//\*/star}"
  local base_dir="/usr/local/etc/ssl"
  local install_dir="$base_dir/$cert"

  if [[ ! -d "$base_dir" ]]; then
    sudo mkdir "$base_dir"
  fi

  if [[ ! -d "$install_dir" ]]; then
    sudo mkdir "$install_dir"
  fi

  sudo "$ACME_ROOT/acme.sh" \
    --home "$ACME_ROOT" \
    --install-cert \
    -d "$domain" \
    --cert-file "$install_dir/cert.pem" \
    --key-file "$install_dir/key.pem" \
    --fullchain-file "$install_dir/fullchain.pem"

  _log "Installed $domain cert to \`$install_dir'"
}

# Needed for acme.sh to deploy correctly
export SYNO_LOCAL_HOSTNAME=1

healthchecks scarif-acme/start

if [[ "${FORCE:-}" == 1 ]]; then
  _log "Forcing renewal"

  sudo -E "$ACME_ROOT/acme.sh" \
    --home "$ACME_ROOT" \
    --cron \
    --force
else
  sudo -E "$ACME_ROOT/acme.sh" \
    --home "$ACME_ROOT" \
    --cron
fi

_log "Starting manual cert installation"

install_cert '*.priddle.network'
install_cert '*.scarif.priddle.network'

_log "End manual cert installation"

if [[ "$SYNO_NGINX_RELOAD" == 1 ]]; then
  _log "Checking Synology nginx config"

  if sudo nginx -t &> /dev/null; then
    _log "Synology nginx config is valid, reloading it"
    sudo nginx -s reload 2>/dev/null
  else
    _log "Synology nginx config error"
    exit 1
  fi
fi

healthchecks scarif-acme
