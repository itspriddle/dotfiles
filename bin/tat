#!/usr/bin/env bash
# Usage: tat [--list|<session_name>]
#
# Attach or create tmux session named the same as current directory.

# https://github.com/thoughtbot/dotfiles/blob/2e49fae/bin/tat

if [[ "$TAT_DEBUG" ]]; then
  export PS4='+ [${BASH_SOURCE##*/}:${LINENO}] '
  set -x
fi

set -euo pipefail

usage() {
  local flag="${1-}"

  sed -ne '/^#/!q;s/^#$/# /;/^# /s/^# //p' < "$0" |
    awk -v f="$flag" 'f == "h" && $1 == "Usage:" { print; exit }; f != "h"'
}

not_in_tmux() {
  [[ -z "${TMUX-}" ]]
}

list_sessions() {
  if ! tmux ls -F "#S" 2> /dev/null; then
    echo "no open sessions" >&2
    return 1
  fi
}

session_exists() {
  local session_name="$1"

  tmux has-session -t "=$session_name"
}

create_detached_session() {
  local session_name="$1"

  (TMUX='' tmux new-session -Ad -s "$session_name")
}

create_if_needed_and_attach() {
  local session_name="$1"

  if not_in_tmux; then
    _tmux new-session -As "$session_name"
  else
    if ! session_exists "$session_name"; then
      create_detached_session "$session_name"
    fi
    _tmux switch-client -t "$session_name"
  fi
}

_tmux() {
  if command -v direnv > /dev/null; then
    exec direnv exec / tmux "$@"
  else
    exec tmux "$@"
  fi
}

main() {
  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      --list | -L)
        list_sessions
        return $?
        ;;
      --help | -h)
        usage "$1"
        return 1
        ;;
      --)
        shift
        break
        ;;
      -*)
        echo "invalid option $1" >&2
        return 1
        ;;
      *)
        break
        ;;
    esac
  done

  create_if_needed_and_attach "$1"
  return $?
}

main "${@-$(basename "$PWD" | sed -e 's/[.:]/-/g;s/^-//')}"
