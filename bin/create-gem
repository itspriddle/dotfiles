#!/usr/bin/env ruby

require 'fileutils'

DIR = File.basename(Dir.pwd)

class GemTemplate

  def self.create!
    new_gem = self.new
    new_gem.create_readme
    new_gem.create_lib
    new_gem.create_specs
    new_gem.create_gemspec
    new_gem.create_gemfile
    new_gem.create_rakefile
    new_gem
  end

  def dir
    ::DIR
  end

  def gem_path
    dir.gsub('-', '/')
  end

  def name
    dir.split('-').map { |seg| seg.gsub(/(?:^|_| )(.)/) { $1.upcase } }.join('::')
  end

  def lib_dir
    "lib/#{gem_path}"
  end

  def lib
    "lib/#{gem_path}.rb"
  end

  def create_lib
    FileUtils.mkdir_p(lib_dir)
    File.open(lib, "w+") { |file| file.puts lib_template }
    File.open("#{lib_dir}/version.rb", "w+") { |file| file.puts version_template }
  end

  def create_specs
    FileUtils.mkdir_p("spec/#{gem_path}")
    File.open("spec/spec_helper.rb", "w+") { |file| file.puts spec_helper_template }
    File.open("spec/#{gem_path}_spec.rb", "w+") { |file| file.puts main_spec_template }
  end

  def create_gemspec
    File.open("#{dir}.gemspec", "w+") { |file| file.puts gemspec_template }
  end

  def create_gemfile
    File.open("Gemfile", "w+") { |file| file.puts gemfile_template }
  end

  def create_rakefile
    File.open("Rakefile", "w+") { |file| file.puts rakefile_template }
  end

  def create_readme
    File.open("README.markdown", "w+") { |file| file.puts readme_template }
  end

  def write_module(code = nil)
    out  = []
    segs = name.split('::')
    segs.each_with_index do |seg, index|
      indent = '  ' * index
      out << "#{indent}module #{seg}"
    end

    out << "#{'  ' * (segs.count - 1)}  #{code}" if code

    segs.each_with_index do |seg, index|
      indent = '  ' * (segs.count - 1 - index)
      out << "#{indent}end"
    end
    out.join("\n")
  end

  def lib_template
    write_module %{autoload :Version, "#{gem_path}/version"}
  end

  def main_spec_template; <<-TEMPLATE
require 'spec_helper'

describe #{name} do
  it "has some specs"
end
TEMPLATE
  end

require '#{gem_path}'
TEMPLATE
  end

  def gemspec_template; <<-TEMPLATE
$:.unshift 'lib'

require '#{gem_path}/version'

Gem::Specification.new do |s|
  s.name       = '#{dir}'
  s.version    = #{name}::Version
  s.date       = Time.now.strftime('%Y-%m-%d')
  s.summary    = '#{name}: Description here'
  s.homepage   = 'https://github.com/itspriddle/#{dir}'
  s.authors    = ['Joshua Priddle']
  s.email      = 'jpriddle@nevercraft.net'

  s.files      = %w[ Rakefile README.markdown ]
  s.files     += Dir['bin/**/*'] if File.exists? 'bin'
  s.files     += Dir['lib/**/*']
  s.files     += Dir['spec/**/*']

  # s.executables      = ['#{dir}']

  # s.add_dependency('gem', '= 0.0.0')

  s.add_development_dependency('rspec', '~> 2.5')

  s.extra_rdoc_files = ['README.markdown']
  s.rdoc_options     = ["--charset=UTF-8"]

  s.description = <<-DESC
    #{name}: Description here
  DESC
end
TEMPLATE
  end

  def gemfile_template
    "source 'http://rubygems.org'\ngemspec\n"
  end

  def rakefile_template; <<-TEMPLATE
$:.unshift 'lib'

begin
  require 'bundler'
  Bundler::GemHelper.install_tasks
rescue LoadError
  puts "Please install bundler (gem install bundler)"
  exit
end

begin
  require 'rspec/core/rake_task'
  RSpec::Core::RakeTask.new :spec
rescue LoadError
  puts "Please install rspec (bundle install)"
  exit
end

desc "Open an irb session preloaded with this library"
task :console do
  sh "irb -rubygems -r ./#{lib} -I ./lib"
end

task :default => :spec
TEMPLATE
  end

  def readme_template; <<-TEMPLATE
# #{name}

Description Here
TEMPLATE
  end

  def version_template
    write_module "VERSION = Version = '0.0.0'"
  end
end

new_gem = GemTemplate.create!

puts <<-MSG

  Setup #{new_gem.name}!

MSG
