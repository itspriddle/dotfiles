#!/usr/bin/env ruby

# Usage:
#   mkdir my_new_gem
#   cd my_new_gem
#   create-gem

require 'fileutils'

DIR = File.basename(Dir.pwd)

class GemTemplate

  def self.create!
    self.new do
      create_readme
      create_lib
      create_specs
      create_gemspec
      create_gemfile
      create_rakefile
      create_license
    end
  end

  def initialize(&blk)
    instance_eval(&blk) if block_given?
  end

  def author_name
    git_config 'user.name'
  end

  def author_email
    git_config 'user.email'
  end

  def github_name
    git_config 'github.user'
  end

  def git_config(key)
    val = %x{git config --global #{key} 2> /dev/null}.chomp.strip
    if val != ""
      val
    else
      "EDITME"
    end
  end

  def dir
    ::DIR
  end

  def gem_path
    dir.gsub('-', '/')
  end

  def name
    dir.split('-').map { |seg| seg.gsub(/(?:^|_| )(.)/) { $1.upcase } }.join('::')
  end

  def lib_dir
    "lib/#{gem_path}"
  end

  def lib
    "lib/#{gem_path}.rb"
  end

  def create_lib
    FileUtils.mkdir_p(lib_dir)
    File.open(lib, "w+") { |file| file.puts lib_template }
    File.open("#{lib_dir}/version.rb", "w+") { |file| file.puts version_template }
  end

  def create_specs
    FileUtils.mkdir_p("spec/#{gem_path}")
    File.open("spec/spec_helper.rb", "w+") { |file| file.puts spec_helper_template }
    File.open("spec/#{gem_path}_spec.rb", "w+") { |file| file.puts main_spec_template }
  end

  def create_gemspec
    File.open("#{dir}.gemspec", "w+") { |file| file.puts gemspec_template }
  end

  def create_gemfile
    File.open("Gemfile", "w+") { |file| file.puts gemfile_template }
  end

  def create_rakefile
    File.open("Rakefile", "w+") { |file| file.puts rakefile_template }
  end

  def create_readme
    File.open("README.markdown", "w+") { |file| file.puts readme_template }
  end

  def create_license
    File.open("LICENSE", "w+") { |file| file.puts license_template }
  end

  def write_module(code = nil)
    out  = []
    segs = name.split('::')
    segs.each_with_index do |seg, index|
      indent = '  ' * index
      out << "#{indent}module #{seg}"
    end

    out << "#{'  ' * (segs.count - 1)}  #{code}" if code

    segs.each_with_index do |seg, index|
      indent = '  ' * (segs.count - 1 - index)
      out << "#{indent}end"
    end
    out.join("\n")
  end

  def lib_template
    write_module %{autoload :Version, "#{gem_path}/version"}
  end

  def main_spec_template; <<-TEMPLATE
require 'spec_helper'

describe #{name} do
  it "has some specs"
end
TEMPLATE
  end

  def license_template; <<-TEMPLATE
Copyright (c) #{Time.now.year} #{author_name} <#{author_email}>

Permission  is  hereby granted, free of charge, to any person ob-
taining a copy of  this  software  and  associated  documentation
files  (the "Software"), to deal in the Software without restric-
tion, including without limitation the rights to use, copy, modi-
fy, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is  fur-
nished to do so, subject to the following conditions:

The  above  copyright  notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF  ANY  KIND,
EXPRESS  OR  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE  AND  NONIN-
FRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER  IN  AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  THE
SOFTWARE.
TEMPLATE
  end

  def spec_helper_template; <<-TEMPLATE
require 'rspec'
require '#{gem_path}'
TEMPLATE
  end

  def gemspec_template; <<-TEMPLATE
$:.unshift 'lib'

require '#{gem_path}/version'

Gem::Specification.new do |s|
  s.platform   = Gem::Platform::RUBY
  s.name       = '#{dir}'
  s.version    = #{name}::Version
  s.date       = Time.now.strftime('%Y-%m-%d')
  s.summary    = '#{name}: Description here'
  s.homepage   = 'https://github.com/#{github_name}/#{dir}'
  s.authors    = ['#{author_name}']
  s.email      = '#{author_email}'

  s.files      = %w[ Rakefile README.markdown ]
  s.files     += Dir['bin/**/*'] if File.exists? 'bin'
  s.files     += Dir['lib/**/*']
  s.files     += Dir['spec/**/*']

  # s.executables      = ['#{dir}']

  # s.add_dependency('gem', '= 0.0.0')

  s.add_development_dependency('rspec', '~> 2.5')
  s.add_development_dependency('rake', '~> 0.8.7')

  s.extra_rdoc_files = ['README.markdown']
  s.rdoc_options     = ["--charset=UTF-8"]

  s.description = <<-DESC
    #{name}: Description here
  DESC
end
TEMPLATE
  end

  def gemfile_template
    "source 'http://rubygems.org'\ngemspec\n"
  end

  def rakefile_template; <<-TEMPLATE
$:.unshift 'lib'

begin
  require 'bundler'
  Bundler::GemHelper.install_tasks
rescue LoadError
  puts "Please install bundler (gem install bundler)"
  exit
end

begin
  require 'rspec/core/rake_task'
  RSpec::Core::RakeTask.new :spec do |t|
    t.rspec_opts = %w[--color --format documentation]
  end
rescue LoadError
  puts "Please install rspec (bundle install)"
  exit
end

desc "Open an irb session preloaded with this library"
task :console do
  sh "irb -rubygems -r ./#{lib} -I ./lib"
end

task :default => :spec
TEMPLATE
  end

  def readme_template; <<-TEMPLATE
# #{name}

Description Here

## Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a future version
  unintentionally.
* Commit, do not bump version. (If you want to have your own version, that is
  fine but bump version in a commit by itself I can ignore when I pull).
* Send me a pull request. Bonus points for topic branches.

## Copyright

Copyright (c) #{Time.now.year} #{author_name}. See LICENSE for details.
TEMPLATE
  end

  def version_template
    write_module "VERSION = Version = '0.0.0'"
  end
end

new_gem = GemTemplate.create!

puts <<-MSG

  Setup #{new_gem.name}!

MSG
