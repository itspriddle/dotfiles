#!/usr/bin/env bash
# Usage: vv [-a|--all]
#
# NAME
#   vv - open recently edited files in Vim
#
# SYNOPSIS
#   vv
#
# DESCRIPTION
#   vv uses fzf to display a list of files that Vim has recently accessed. By
#   default, only files from the current directory are displayed. Use the
#   `--all` option to show all files.
#
#   Based on https://github.com/junegunn/fzf/wiki/Examples#v
#
# SEE ALSO
#   fzf(1), vim(1)

[ "$DEBUG" ] && set -x

# Print help text and exit.
if [ "${1:-}" = "-h" ] || [ "${1:-}" = "--help" ]; then
  sed -ne '/^#/!q;s/^#$/# /;/^# /s/^# //p' < "$0" |
    awk -v f="${1//-/}" 'f == "h" && $1 == "Usage:" { print; exit }; f != "h"'
  exit 1
elif [ "${1:-}" = "-a" ] || [ "${1:-}" = "--all" ]; then
  no_cwd=1
  shift
fi

# Ensure `fzf` is available.
if ! type fzf &> /dev/null; then
  >&2 echo "Error: \`fzf\` not found. Install from https://github.com/junegunn/fzf"
  exit 1
fi

get_candidates() {
  local dir

  if [ ! -r ~/.viminfo ]; then
    return 1
  fi

  { if [ "$1" ]; then
      grep '^> ' |
        awk '
          $0 ~ /^> / && $0 !~ /.git/ {
            print $2
          }
        '
    else
      dir="$(pwd)"

      grep '^> ' |
        awk -v path="${dir/$HOME/\~}/" '
          $0 ~ /^> / && $0 ~ path && $0 !~ /.git/ {
            print substr($2, length(path) + 1)
          }
        '
    fi
  } < ~/.viminfo
}

candidates=()

while IFS=$'\n' read -r line; do
  [[ -f "${line/#~/$HOME}" ]] && candidates+=("$line")
done < <(get_candidates "${no_cwd:-}")

size=${#candidates[@]}

if [[ ${size} -gt 0 ]]; then
  [[ ${size} -gt 20 ]] && size=20

  height=$((2 + size)) # 2 extra rows for FZF prompt
  files=()

  while IFS=$'\n' read -r line; do
    files+=("${line/#~/$HOME}")
  done < <(printf "%s\\n" "${candidates[@]}" | fzf-tmux --height ${height} -d -m -q "$*")

  if [[ ${#files[@]} -gt 0 ]]; then
    exec "vim" "-O" "${files[@]}"
  else
    exit 1
  fi
else
  >&2 echo "No recent files found!"
  exit 1
fi
