#!/usr/bin/env bash
# Usage: vv
#
# NAME
#   vv - open recently edited files in Vim
#
# SYNOPSIS
#   vv
#
# DESCRIPTION
#   vv uses fzf to display a list of files that Vim has recently accessed in
#   the current directory. Selected files are passed to Vim.
#
#   Based on https://github.com/junegunn/fzf/wiki/Examples#v
#
# SEE ALSO
#   fzf(1), vim(1)

[ "$DEBUG" ] && set -x

# Print help text and exit.
if [ "${1:-}" = "-h" ] || [ "${1:-}" = "--help" ]; then
  sed -ne '/^#/!q;s/^#$/# /;/^# /s/^# //p' < "$0" | awk -v flag="${1}" '
    { help = help $0 "\n" } /^[Uu]sage: / { if (flag == "-h") usage = $0 "\n" }
    END { out = usage ? usage : help; gsub(/^\n*|\n*$/, "", out); print out }
  '
  exit 1
fi

# Ensure `fzf` is available.
if ! type fzf &> /dev/null; then
  >&2 echo "Error: \`fzf\` not found. Install from https://github.com/junegunn/fzf"
  exit 1
fi

get_candidates() {
  awk -v path="${PWD/#$HOME/~}/" '
    $0 ~ /^> / && $0 ~ path && $0 !~ /.git/ {
      print substr($2, length(path) + 1)
    }
  ' < ~/.viminfo
}

candidates=()

while IFS=$'\n' read -r line; do
  [[ -f "$line" ]] && candidates+=("$line")
done < <(get_candidates)

size=${#candidates[@]}

if [[ ${size} -gt 0 ]]; then
  [[ ${size} -gt 10 ]] && size=10

  height=$((2 + size)) # 2 extra rows for FZF prompt
  files=()

  while IFS=$'\n' read -r line; do
    files+=("$line")
  done < <(printf "%s\\n" "${candidates[@]}" | fzf-tmux --height ${height} -d -m -q "$*")

  if [[ ${#files[@]} -gt 0 ]]; then
    exec "vim" "-O" "${files[@]}"
  else
    exit 1
  fi
else
  >&2 echo "No recent files found!"
  exit 1
fi
