#!/usr/bin/env bash
# Usage: git pr [options]
#
# Pushes the current branch upstream to GitHub and opens a pull request. On OS
# X, the pull request URL is copied to the clipboard. Requires a repo with
# github.com as the remote named origin and the `hub` CLI tool
# (https://github.com/github/hub). Options are passed to the `hub
# pull-request` command.
#
# Examples, see also `hub pull-request --help`:
#
#     $ git pr
#     $ git pr -b base-branch
#     $ git pr -m "This is my PR"
#     $ git pr -m "This is my PR subject
#
#       And this is the body"
#     $ echo "This is my PR" | git pr -F -

set -e

# Internal, used with the $BROWSER variable to copy the pull request URL to
# the clipboard.
if [[ "$1" = "--pbcopy" ]]; then
  shift
  printf "%s" $1 | pbcopy
  open "$(pbpaste)"
  exit
fi

# Print help text and exit.
if [[ "$1" = "-h" ]]; then
  sed -ne '/^#/!q;s/.\{1,2\}//;1d;p' < "$0"
  exit
fi

if ! type hub &> /dev/null; then
  echo "Error: \`hub\` not found. Install from https://github.com/github/hub"
  exit 1
fi

if ! git config --get remote.origin.url 2> /dev/null | grep github &> /dev/null; then
  echo "Error: Remote \`origin' is not on GitHub, or is not setup."
  exit 1
fi

branch=$(git symbolic-ref HEAD | sed 's|refs/heads/||g')

if [[ "$branch" = "master" ]]; then
  echo "Error: You are on \`master', checkout a new branch first!"
  exit 1
fi

if [[ $(git rev-parse HEAD) != $(git rev-parse @{u} 2> /dev/null) ]]; then
  git push -u origin $branch
fi

if [[ -z "$SSH_CONNECTION" ]] && [[ "$OSTYPE" = darwin* ]]; then
  # Hack to copy the pull request URL to the clipboard automatically
  BROWSER="$0 --pbcopy" hub pull-request -o "$@"
  echo "Created pull request - $(pbpaste)"
else
  hub pull-request "$@"
fi
